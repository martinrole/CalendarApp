{"version":3,"sources":["helpers/fetch.js","helpers/messages.js","redux/ducks/authDucks.js","helpers/calendar-config.js","redux/ducks/calendarDucks.js","redux/ducks/uiDucks.js","redux/store.js","components/ui/Loader.jsx","components/ui/Navbar.jsx","components/calendar/CalendarEvent.jsx","components/calendar/CalendarModal.jsx","components/ui/FloatButton.jsx","components/calendar/CalendarScreen.jsx","routers/PrivateRoute.jsx","components/NotFound/NotFoundScreen.jsx","components/auth/LoginScreen.jsx","hooks/useForm.js","routers/PublicRoute.jsx","routers/AppRouter.jsx","CalendarApp.jsx","index.js"],"names":["baseUrl","process","authFetch","url","data","method","a","urlReq","fetch","params","headers","body","JSON","stringify","respuesta","json","console","log","authFetchToken","token","localStorage","getItem","showMessage","icon","title","text","Swal","fire","initialState","checking","types","calendarConfig","allDay","previous","next","today","month","week","day","agenda","date","time","event","noEventsInRange","showMore","total","adjustEventsDate","eventos","map","evento","start","moment","toDate","end","events","activeEvent","eventClearActiveAction","type","modalOpen","openModalAction","rootReducer","combineReducers","ui","state","action","calendar","payload","id","filter","auth","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","Loader","className","style","height","role","Navbar","nombre","useSelector","dispatch","useDispatch","navigate","useNavigate","onClick","replace","dispath","getState","clear","CalendarEvent","usuario","customStyles","content","top","left","right","bottom","marginRight","transform","Modal","setAppElement","startEvent","minutes","seconds","add","endEvent","clone","initEvent","notes","CalendarModal","useState","dateStart","setDateStart","dateEnd","setDateEnd","titleValid","setTitleValid","formValues","setFormValues","useEffect","starReset","endReset","closeModal","handleInputChange","target","name","value","isOpen","onRequestClose","closeTimeoutMS","overlayClassName","onSubmit","e","preventDefault","momentStart","momentEnd","isSameOrAfter","trim","ok","msg","uid","res","_id","eventNewAction","format","amPmAriaLabel","onChange","endDate","minDate","placeholder","autoComplete","rows","FloatButton","locale","localizer","momentLocalizer","CalendarScreen","view","setView","startAccessor","endAccessor","messages","eventPropGetter","isSelected","backgroundColor","borderRadius","opacity","display","color","onDoubleClickEvent","onSelectEvent","onView","setItem","onSelectSlot","selectable","components","PrivateRoute","path","element","to","NotFoundScreen","LoginScreen","values","setValues","useForm","loginCorreo","loginContrasena","rNombre","rCorreo","rContrasena","rContrasena2","correo","contrasena","Date","getTime","PublicRoute","AppRouter","CalendarApp","ReactDOM","render","document","getElementById"],"mappings":"mOAAMA,EAAUC,gDAKHC,EAAS,uCAAG,WAAQC,EAAKC,EAAMC,GAAnB,mBAAAC,EAAA,yDACfC,EADe,UACHP,EADG,YACQG,GAEb,QAAXE,EAHgB,gCAIJG,MAAMD,GAJF,8DAOfE,EAAS,CACXJ,SACAK,QAAS,CACL,eAAgB,oBAEpBC,KAAMC,KAAKC,UAAWT,IAZL,kBAgBOI,MAAOD,EAAQE,GAhBtB,cAgBXK,EAhBW,iBAiBJA,EAAUC,OAjBN,yCAoBjBC,QAAQC,IAAI,uBAAZ,MApBiB,kBAqBV,MArBU,0DAAH,0DA2BTC,EAAc,uCAAG,WAAQf,EAAKC,EAAMC,GAAnB,qBAAAC,EAAA,6DACpBC,EADoB,UACRP,EADQ,YACGG,GACvBgB,EAAQC,aAAaC,QAAQ,UAAY,GAI3CZ,EADW,QAAXJ,EACS,CACLA,SACAK,QAAS,CACL,UAAWS,IAIV,CACLd,SACAK,QAAS,CACL,eAAgB,mBAChB,UAAWS,GAEfR,KAAMC,KAAKC,UAAWT,IAnBJ,kBAyBEI,MAAOD,EAAQE,GAzBjB,cAyBhBK,EAzBgB,gBA0BTA,EAAUC,OA1BD,iFA6BtBC,QAAQC,IAAI,4BAAZ,MA7BsB,kBA8Bf,MA9Be,0DAAH,0D,iBChBdK,EAAa,SAACC,EAAKC,EAAOC,GACnCC,IAAKC,KAAK,CACNJ,OACAC,QACAC,UCfFG,EAAe,CACjBC,UAAU,GAIRC,EACc,8BADdA,EAGK,oBAHLA,EAMM,qB,yBCbCC,EAAiB,CAC1BC,OAAQ,iBACRC,SAAU,WACVC,KAAM,YACNC,MAAO,MACPC,MAAO,MACPC,KAAM,SACNC,IAAK,SACLC,OAAQ,SACRC,KAAM,QACNC,KAAM,OACNC,MAAO,SACPC,gBAAiB,+BACjBC,SAAU,SAAAC,GAAK,8BAAkBA,EAAlB,OAINC,EAAmB,WAAqB,IAAnBC,EAAkB,uDAAR,GACzC,OAAOA,EAAQC,KAAK,SAAAC,GAAM,kCACdA,GADc,IAEjBC,MAAOC,IAAOF,EAAOC,OAAOE,SAC5BC,IAAKF,IAAOF,EAAOI,KAAKD,eCG9BxB,EAAe,CACjB0B,OAAQ,GACRC,YAAa,MAIXzB,EACQ,4BADRA,EAES,6BAFTA,EAGW,+BAHXA,EAIgB,qCAJhBA,EAKW,gCALXA,EAMW,+BANXA,EAOa,qCAoJN0B,EAAyB,iBAAO,CACzCC,KAAM3B,IC1LJF,EAAe,CACjB8B,WAAW,GAIT5B,EACW,uBADXA,EAEY,wBAkBL6B,EAAkB,iBAAO,CAClCF,KAAM3B,ICtBJ8B,EAAcC,YAAgB,CAChCC,GDOqB,WAAoC,IAAnCC,EAAkC,uDAA1BnC,EAAcoC,EAAY,uCACxD,OAAQA,EAAOP,MACX,KAAK3B,EACD,OAAO,2BAAKiC,GAAZ,IAAmBL,WAAW,IAClC,KAAK5B,EACG,OAAO,2BAAKiC,GAAZ,IAAmBL,WAAW,IAEtC,QACI,OAAOK,ICdfE,SFmC2B,WAAoC,IAAnCF,EAAkC,uDAA1BnC,EAAcoC,EAAY,uCAC9D,OAAQA,EAAOP,MACX,KAAK3B,EACD,OAAO,2BACAiC,GADP,IAEIR,YAAaS,EAAOE,UAE5B,KAAKpC,EACD,OAAO,2BACAiC,GADP,IAEIR,YAAa,OAErB,KAAKzB,EACD,OAAO,2BACAiC,GADP,IAEIT,OAAO,GAAD,mBAAMS,EAAMT,QAAZ,CAAoBU,EAAOE,YAEzC,KAAKpC,EACD,OAAO,2BACAiC,GADP,IAEIT,OAAO,YAAMU,EAAOE,WAE5B,KAAKpC,EACD,OAAO,2BACAiC,GADP,IAEIT,OAAQS,EAAMT,OAAON,KAAK,SAAAN,GAAK,OAAIA,EAAMyB,KAAOH,EAAOE,QAAQC,GAAKH,EAAOE,QAAUxB,OAE7F,KAAKZ,EACD,OAAO,2BACAiC,GADP,IAEIT,OAAQS,EAAMT,OAAOc,QAAQ,SAAA1B,GAAK,OAAIA,EAAMyB,KAAOJ,EAAMR,YAAYY,MACrEZ,YAAa,OAErB,KAAKzB,EACD,OAAO,eACAF,GAEX,QACI,OAAOmC,IExEfM,KJWuB,WAAoC,IAAnCN,EAAkC,uDAA1BnC,EAAcoC,EAAY,uCAC1D,OAAQA,EAAOP,MACX,KAAK3B,EACD,OAAO,uCACAiC,GACAC,EAAOE,SAFd,IAGIrC,UAAU,IAElB,KAAKC,EACD,OAAO,2BACAiC,GADP,IAEIlC,UAAU,IAElB,KAAKC,EACD,MAAO,CACHD,UAAU,GAGlB,QACI,OAAOkC,MI1BbO,EAAmBC,OAAOC,sCAAwCC,IAE3DC,EAAQC,YACjBf,EACAU,EAAkBM,YAAiBC,O,6BChB1BC,EAAS,WAElB,OACI,sBAAKC,UAAU,mDAAmDC,MAAO,CAAEC,OAAQ,SAAnF,UACI,qBAAKF,UAAU,iCAAiCG,KAAK,SAArD,SACI,sBAAMH,UAAU,UAAhB,0BAEJ,qBAAKA,UAAU,mCAAmCG,KAAK,SAAvD,SACI,sBAAMH,UAAU,UAAhB,0BAEJ,qBAAKA,UAAU,iCAAiCG,KAAK,SAArD,SACI,sBAAMH,UAAU,UAAhB,0BAEJ,qBAAKA,UAAU,gCAAgCG,KAAK,SAApD,SACI,sBAAMH,UAAU,UAAhB,0BAEJ,qBAAKA,UAAU,iCAAiCG,KAAK,SAArD,SACI,sBAAMH,UAAU,UAAhB,0BAEJ,qBAAKA,UAAU,8BAA8BG,KAAK,SAAlD,SACI,sBAAMH,UAAU,UAAhB,0BAEJ,qBAAKA,UAAU,+BAA+BG,KAAK,SAAnD,SACI,sBAAMH,UAAU,UAAhB,0BAEJ,qBAAKA,UAAU,8BAA8BG,KAAK,SAAlD,SACI,sBAAMH,UAAU,UAAhB,8B,wBCtBHI,G,MAAS,WAElB,IAAQC,EAAWC,aAAY,SAAAtB,GAAK,OAAIA,EAAMM,QAAtCe,OACFE,EAAWC,cACXC,EAAWC,cAWjB,OACI,sBAAKV,UAAU,uCAAf,UACI,sBAAMA,UAAU,eAAhB,SAAgCK,IAEhC,yBAAQL,UAAU,yBAAyBW,QAb9B,WACjBF,EAAS,SAAU,CACfG,SAAS,IAGbL,GN0G2B,SAACM,EAASC,GACzCD,EAAQ,CACJnC,KAAM3B,IAGVV,aAAa0E,WM9GTR,GJ+JiC,SAACA,EAAUO,GAChDP,EAAS,CACL7B,KAAM3B,QI1JF,UACI,0CACA,mBAAGiD,UAAU,gCC1Bd,SAASgB,EAAT,GAAmC,IAAVrD,EAAS,EAATA,MAE5BlB,EAAmBkB,EAAnBlB,MAAOwE,EAAYtD,EAAZsD,QAEf,OACI,gCACI,iCAASxE,IADb,MAC+B,+BAAOwE,EAAQZ,Y,kDCEhDa,GAAe,CACjBC,QAAS,CACLC,IAAK,MACLC,KAAM,MACNC,MAAO,OACPC,OAAQ,OACRC,YAAa,OACbC,UAAW,0BAKnBC,KAAMC,cAAc,SAEpB,IAAMC,GAAaxD,MAASyD,QAAQ,GAAGC,QAAQ,GAAGC,IAAI,EAAG,SACnDC,GAAWJ,GAAWK,QAAQF,IAAI,EAAG,SAErCG,GAAY,CACdzF,MAAO,GACP0F,MAAO,GACPhE,MAAOyD,GAAWvD,SAClBC,IAAK0D,GAAS3D,UAKL+D,GAAgB,WAEzB,MAAkCC,mBAAST,GAAWvD,UAAtD,mBAAOiE,EAAP,KAAkBC,EAAlB,KACA,EAA8BF,mBAASL,GAAS3D,UAAhD,mBAAOmE,EAAP,KAAgBC,EAAhB,KACA,EAAoCJ,oBAAS,GAA7C,mBAAOK,EAAP,KAAmBC,EAAnB,KAEQhE,EAAc2B,aAAY,SAAAtB,GAAK,OAAIA,EAAMD,MAAzCJ,UACAH,EAAgB8B,aAAY,SAAAtB,GAAK,OAAIA,EAAME,YAA3CV,YAER,EAAoC6D,mBAASH,IAA7C,mBAAOU,EAAP,KAAmBC,EAAnB,KACQpG,EAA6BmG,EAA7BnG,MAAO0F,EAAsBS,EAAtBT,MAAOhE,EAAeyE,EAAfzE,MAAOG,EAAQsE,EAARtE,IACvBiC,EAAWC,cAEjBsC,qBAAU,WAEN,GAAItE,EAAa,CACbqE,EAAcrE,GAEd,IAAMuE,EAAY3E,IAAOI,EAAYL,OAAO2D,QAAQ,GAAGzD,SACjD2E,EAAW5E,IAAOI,EAAYF,KAAKwD,QAAQ,GAAGzD,SAEpDkE,EAAaQ,GACbN,EAAWO,QAEXH,EAAcX,MAEnB,CAAC1D,IAEJ,IAAMyE,EAAa,WACfhH,QAAQC,IAAI,gBACZqE,ELjC+B,CACnC7B,KAAM3B,IKiCFwD,EAAS9B,KAGToE,EAAcX,IACdK,EAAaX,GAAWvD,UACxBoE,EAAWT,GAAS3D,WA0BlB6E,EAAoB,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACzBN,EAAc,2BACPD,GADM,kBAERO,EAAOC,KAAOD,EAAOE,UA2C9B,OACI,eAAC,KAAD,CACIC,OAAQ3E,EAER4E,eAAgBN,EAChBhD,MAAOiB,GACPsC,eAAgB,IAChBxD,UAAU,QACVyD,iBAAiB,cAPrB,UASI,mCAAMjF,EAAc,gBAAkB,eAAtC,OACA,uBAEA,uBAAMwB,UAAU,YAAY0D,SApDf,SAACC,GAClBA,EAAEC,iBAEF,IN6B2BjG,EM7BrBkG,EAAczF,IAAOD,GACrB2F,EAAY1F,IAAOE,GAEzB,OAAIuF,EAAYE,cAAcD,GACnBvH,EAAY,QAAS,KAAM,2CAGjCE,EAAMuH,QAOPzD,EAFA/B,GNiBuBb,EMfIiF,ENeN,uCAAa,WAAOrC,EAAUO,GAAjB,mBAAAvF,EAAA,+EAGZY,EAAe,UAAD,OAAWwB,EAAMyB,IAAMzB,EAAO,OAHhC,gBAG9BsG,EAH8B,EAG9BA,GAAIC,EAH0B,EAG1BA,IAEPD,EACD1D,EAAS,CACL7B,KAAM3B,EACNoC,QAASxB,IAIbpB,EAAY,QAAS,KAAM2H,GAZO,gDAgBtCjI,QAAQC,IAAI,oBAAZ,MAhBsC,yDAAb,yDAjDH,SAAEyB,GAAF,8CAAa,WAAQ4C,EAAUO,GAAlB,uBAAAvF,EAAA,+DAEfuF,IAAWxB,KAA3B6E,EAF+B,EAE/BA,IAAK9D,EAF0B,EAE1BA,OAF0B,kBAKjBlE,EAAe,gBAAiBwB,EAAO,QALtB,OAK7ByG,EAL6B,OAO7BlG,EAP6B,yBAQ/BkB,GAAIgF,EAAIlG,OAAOkB,IACZzB,GAT4B,IAU/BsD,QAAS,CACLoD,IAAKF,EACL9D,YAIH+D,EAAIH,IACL1D,EAAS,CACL7B,KAAM3B,EACNoC,QAASjB,IAnBkB,gDAwBnCjC,QAAQC,IAAI,0BAAZ,MAxBmC,yDAAb,wDM+CToI,CAAe1B,IAI5BD,GAAc,QACdM,KAxBWN,GAAc,IAyCrB,UAEI,sBAAK3C,UAAU,aAAf,UACI,wDACA,cAAC,KAAD,CACIA,UAAU,eACVuE,OAAO,oBACPC,cAAc,eACdC,SA1FU,SAACd,GAC3BpB,EAAaoB,GAEb,IAAMe,EAAUtG,IAAOuF,GAAG5B,IAAI,EAAG,SACjCU,EAAWiC,EAAQrG,UAEnBwE,EAAc,2BACPD,GADM,IAETzE,MAAOwF,EACPrF,IAAKoG,EAAQrG,aAkFDgF,MAAOf,OAIf,sBAAKtC,UAAU,aAAf,UACI,qDACA,cAAC,KAAD,CACIA,UAAU,eACVuE,OAAO,oBACPC,cAAc,eACdG,QAASrC,EACTmC,SAxFQ,SAACd,GACzBlB,EAAWkB,GAEXd,EAAc,2BACPD,GADM,IAETtE,IAAKqF,MAoFON,MAAOb,OAIf,uBACA,sBAAKxC,UAAU,aAAf,UACI,2CACA,uBACItB,KAAK,OACLsB,UAAS,wBAAmB0C,GAAc,cAC1CkC,YAAY,oBACZxB,KAAK,QACLyB,aAAa,MACbxB,MAAO5G,EACPgI,SAAUvB,IAEd,uBAAO9D,GAAG,YAAYY,UAAU,uBAAhC,yCAGJ,sBAAKA,UAAU,aAAf,UACI,8DACA,0BACItB,KAAK,OACLsB,UAAU,eACV4E,YAAY,QACZE,KAAK,IACL1B,KAAK,QACLC,MAAOlB,EACPsC,SAAUvB,IAGd,uBAAO9D,GAAG,YAAYY,UAAU,uBAAhC,yCAGJ,yBACItB,KAAK,SACLsB,UAAU,oCAFd,UAII,mBAAGA,UAAU,gBACb,sDClNP+E,GAAc,WAEvB,IAAQvG,EAAgB8B,aAAY,SAAAtB,GAAK,OAAIA,EAAME,YAA3CV,YAEF+B,EAAWC,cAUjB,OAAoB,OAAhBhC,EAGI,wBAAQwB,UAAU,sBAAsBW,QAX5B,WAChBJ,EAAS3B,MAUL,SACI,mBAAGoB,UAAU,kBAMjB,wBAAQA,UAAU,qBAAqBW,QAd3B,WAChBJ,EP4IyB,uCAAM,WAAOA,EAAUO,GAAjB,qBAAAvF,EAAA,sEAGvB6D,EAAO0B,IAAW5B,SAASV,YAA3BY,GAHuB,SAILjD,EAAe,UAAD,OAAWiD,GAAM,GAAI,UAJ9B,gBAIvB6E,EAJuB,EAIvBA,GAAIC,EAJmB,EAInBA,IAEPD,EACD1D,EAAS,CACL7B,KAAM3B,IAGVR,EAAY,QAAS,KAAM2H,GAXA,kDAe/BjI,QAAQC,IAAI,0BAAZ,MAf+B,0DAAN,0DO/HrB,SACI,mBAAG8D,UAAU,oBCb7B5B,IAAO4G,OAAO,MACd,IAAMC,GAAYC,YAAgB9G,KAIrB+G,GAAiB,WAE1B,MAAwB9C,mBAAShG,aAAaC,QAAQ,aAAe,SAArE,mBAAO8I,EAAP,KAAaC,EAAb,KACM9E,EAAWC,cACTjC,EAAW+B,aAAY,SAAAtB,GAAK,OAAIA,EAAME,YAAtCX,OACA4F,EAAQ7D,aAAY,SAAAtB,GAAK,OAAIA,EAAMM,QAAnC6E,IAERrB,qBAAU,WACNvC,ERsFuB,uCAAM,WAAQA,EAAUO,GAAlB,qBAAAvF,EAAA,+EAGCY,EAAe,UAAW,KAAM,OAHjC,gBAGrB8H,EAHqB,EAGrBA,GAAIjG,EAHiB,EAGjBA,QAERiG,IACM1F,EAASR,EAAkBC,GACjCuC,EAAS,CACL7B,KAAM3B,EACNoC,QAASZ,KATY,gDAc7BtC,QAAQC,IAAI,2BAAZ,MAd6B,yDAAN,2DQrFxB,CAACqE,IAuCJ,OACI,sBAAKP,UAAU,kBAAf,UACI,cAAC,EAAD,IAEA,cAAC,IAAD,CACIiF,UAAWA,GACX1G,OAAQA,EACR+G,cAAc,QACdC,YAAY,MACZC,SAAUxI,EACVyI,gBA9CO,SAAC9H,EAAOQ,EAAOG,EAAKoH,GAUnC,MAAO,CACHzF,MATU,CACV0F,gBAAkBxB,IAAQxG,EAAMsD,QAAQoD,IAAO,UAAY,UAC3DuB,aAAc,MACdC,QAAS,GACTC,QAAS,QACTC,MAAO,WAwCHC,mBAhCQ,SAACrC,GACjB1H,QAAQC,IAAI,iBACZqE,EAAS3B,MA+BDqH,cA5BU,SAACtC,GACnB1H,QAAQC,IAAI,yBACZqE,ER8HuC,CAC3C7B,KAAM3B,EACNoC,QQhI+BwE,KA2BnBuC,OAxBS,SAACd,GAClBnJ,QAAQC,IAAI,iBAAkBkJ,GAC9BC,EAAQD,GACR/I,aAAa8J,QAAQ,WAAYf,IAsBzBgB,aAnBS,SAACzC,GAClB1H,QAAQC,IAAI,kBACZqE,EAAS9B,MAkBD4H,YAAY,EACZjB,KAAMA,EACNkB,WAAY,CACR3I,MAAOqD,KAIf,cAAC,GAAD,IAEA,cAAC,GAAD,QC3FCuF,GAAe,WAGxB,OAFAtK,QAAQC,IAAI,gBAGR,eAAC,IAAD,WACI,cAAC,IAAD,CAAOsK,KAAK,YAAYC,QAAS,cAAC,GAAD,MACjC,cAAC,IAAD,CAAOD,KAAK,KAAKC,QAAS,cAAC,IAAD,CAAUC,GAAG,oBCRtCC,GAAiB,WAE1B,IAAMlG,EAAWC,cAMjB,OACI,qBAAKV,UAAU,mDAAmDC,MAAO,CAAEC,OAAQ,SAAnF,SACI,gCACI,oBAAIF,UAAU,0BAAd,iBACA,oBAAIA,UAAU,OAAd,iCACA,wBAAQA,UAAU,4BAA4BW,QATtC,WAChBF,EAAS,SAAU,CAAEG,SAAS,KAQtB,4BCTHgG,I,OAAc,WAGvB,IAQA,ECdmB,WAA0B,IAAxB/J,EAAuB,uDAAR,GAEpC,EAA4BwF,mBAASxF,GAArC,mBAAOgK,EAAP,KAAeC,EAAf,KAgBA,MAAO,CAAED,EATiB,SAAC,GAAgB,IAAd1D,EAAa,EAAbA,OAEzB2D,EAAU,2BACHD,GADE,kBAEH1D,EAAOC,KAAQD,EAAOE,UATlB,WACVyD,EAAWjK,KDSyBkK,CARpB,CAChBC,YAAa,yBACbC,gBAAiB,SACjBC,QAAS,QACTC,QAAS,wBACTC,YAAa,aACbC,aAAc,eAElB,mBAAOzE,EAAP,KAAmBM,EAAnB,KACQ8D,EAA8EpE,EAA9EoE,YAAaC,EAAiErE,EAAjEqE,gBAAiBC,EAAgDtE,EAAhDsE,QAASC,EAAuCvE,EAAvCuE,QAASC,EAA8BxE,EAA9BwE,YAAaC,EAAiBzE,EAAjByE,aAG/D9G,EAAWC,cAkBjB,OACI,qBAAKR,UAAU,4BAAf,SACI,sBAAKA,UAAU,MAAf,UACI,sBAAKA,UAAU,wBAAf,UACI,yCACA,uBAAM0D,SArBF,SAACC,Gb+BE,IAAE2D,EAAQC,Ea9B7B5D,EAAEC,iBAEFrD,Gb4BqB+G,Ea5BAN,Eb4BQO,Ea5BKN,Eb4Bf,uCAA0B,WAAQpG,EAASC,GAAjB,2BAAAvF,EAAA,6DAC3CF,EAAO,CAAEiM,SAAQC,cAD0B,SAEHpM,EAAU,OAAQE,EAAM,QAFrB,gBAEzC8I,EAFyC,EAEzCA,IAAK9D,EAFoC,EAEpCA,OAAQjE,EAF4B,EAE5BA,MAAO6H,EAFqB,EAErBA,GAAIC,EAFiB,EAEjBA,IAE3BD,GACD5H,aAAa8J,QAAQ,QAAQ/J,GAC7BC,aAAa8J,QAAQ,mBAAmB,IAAIqB,MAAOC,WAEnD5G,EAAQ,CACJnC,KAAM3B,EACNoC,QAAS,CACLgF,MACA9D,aAKR9D,EAAY,QAAS,KAAM2H,GAjBkB,4CAA1B,2DaVP,UACI,qBAAKlE,UAAU,aAAf,SACI,uBACItB,KAAK,OACL0E,KAAK,cACLpD,UAAU,eACV4E,YAAY,SACZvB,MAAO2D,EACPvC,SAAUvB,MAGlB,qBAAKlD,UAAU,aAAf,SACI,uBACItB,KAAK,WACL0E,KAAK,kBACLpD,UAAU,eACV4E,YAAY,gBACZvB,MAAO4D,EACPxC,SAAUvB,MAGlB,qBAAKlD,UAAU,aAAf,SACI,uBACItB,KAAK,SACLsB,UAAU,YACVqD,MAAM,qBAMtB,sBAAKrD,UAAU,wBAAf,UACI,0CACA,uBAAM0D,SAhDC,SAACC,GAGpB,GAFAA,EAAEC,iBAEEwD,IAAgBC,EAChB,OAAO9K,EAAY,QAAS,KAAM,iCb2ChB,IAAE+K,EAAQlE,EAAMmE,EaxCtChH,GbwCwB+G,EaxCAH,EbwCQ/D,EaxCC8D,EbwCKK,EaxCIH,EbwCpB,uCAAgC,WAAQvG,EAASC,GAAjB,2BAAAvF,EAAA,6DACpDF,EAAO,CAAEiM,SAAQjH,OAAQ+C,EAAMmE,cADqB,SAEZpM,EAAU,cAAeE,EAAM,QAFnB,gBAElD8I,EAFkD,EAElDA,IAAK9D,EAF6C,EAE7CA,OAAQjE,EAFqC,EAErCA,MAAO6H,EAF8B,EAE9BA,GAAIC,EAF0B,EAE1BA,IAG3BD,GACD5H,aAAa8J,QAAQ,QAAQ/J,GAC7BC,aAAa8J,QAAQ,mBAAmB,IAAIqB,MAAOC,WAEnD5G,EAAQ,CACJnC,KAAM3B,EACNoC,QAAS,CACLgF,MACA9D,YAIR9D,EAAY,UAAW,aAAa,qBAGpCA,EAAY,QAAS,KAAM2H,GApB2B,4CAAhC,2DaCV,UACI,qBAAKlE,UAAU,aAAf,SACI,uBACItB,KAAK,OACL0E,KAAK,UACLpD,UAAU,eACV4E,YAAY,SACZvB,MAAO6D,EACPzC,SAAUvB,MAGlB,qBAAKlD,UAAU,aAAf,SACI,uBACItB,KAAK,QACL0E,KAAK,UACLpD,UAAU,eACV4E,YAAY,SACZvB,MAAO8D,EACP1C,SAAUvB,MAGlB,qBAAKlD,UAAU,aAAf,SACI,uBACItB,KAAK,WACL0E,KAAK,cACLpD,UAAU,eACV4E,YAAY,gBACZvB,MAAO+D,EACP3C,SAAUvB,MAIlB,qBAAKlD,UAAU,aAAf,SACI,uBACItB,KAAK,WACL0E,KAAK,eACLpD,UAAU,eACV4E,YAAY,0BACZvB,MAAOgE,EACP5C,SAAUvB,MAIlB,qBAAKlD,UAAU,aAAf,SACI,uBACItB,KAAK,SACLsB,UAAU,YACVqD,MAAM,gCExHzBqE,GAAc,WAGvB,OAFAzL,QAAQC,IAAI,eAGR,eAAC,IAAD,WACI,cAAC,IAAD,CAAOsK,KAAK,SAASC,QAAS,cAAC,GAAD,MAC9B,cAAC,IAAD,CAAOD,KAAK,KAAKC,QAAS,cAAC,GAAD,UCFzBkB,GAAY,WAErB,MAA0BrH,aAAY,SAAAtB,GAAK,OAAIA,EAAMM,QAA7CxC,EAAR,EAAQA,SAAUqH,EAAlB,EAAkBA,IAEZ5D,EAAWC,cAOjB,OALAsC,qBAAU,WAENvC,EhBoFuB,uCAAM,WAAQM,EAASC,GAAjB,eAAAvF,EAAA,sEAEfY,EAAe,mBAAoB,KAAO,OAF3B,QAE3BiI,EAF2B,QAIxBH,IACL5H,aAAa8J,QAAQ,QAAQ/B,EAAIhI,OACjCC,aAAa8J,QAAQ,mBAAmB,IAAIqB,MAAOC,WAEnD5G,EAAQ,CACJnC,KAAM3B,EACNoC,QAAS,CACLgF,IAAKC,EAAID,IACT9D,OAAQ+D,EAAI/D,WAKpBQ,EAAQ,CACJnC,KAAM3B,IAlBmB,2CAAN,2DgBnFxB,CAACwD,IAEAzD,EACO,cAAC,EAAD,IAIP,cAAC,IAAD,UACI,eAAC,IAAD,WACKqH,GAAO,cAAC,IAAD,CAAOqC,KAAK,KAAKC,QAAS,cAAC,GAAD,OAChCtC,GAAO,cAAC,IAAD,CAAOqC,KAAK,KAAKC,QAAS,cAAC,GAAD,YCvBtCmB,GAAc,WACvB,OACI,cAAC,IAAD,CAAUjI,MAAOA,EAAjB,SACI,cAAC,GAAD,O,OCDZkI,IAASC,OACP,cAAC,GAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.729c039d.chunk.js","sourcesContent":["const baseUrl = process.env.REACT_APP_API_URL\r\n\r\n//Estas funciones se ejecutas dependiendo si es una petición privada o no\r\n\r\n//Autenticación sin token\r\nexport const authFetch = async ( url, data, method ) => {\r\n    const urlReq = `${baseUrl}/${url}`\r\n\r\n    if ( method === 'GET') {\r\n        return await fetch(urlReq)\r\n    }\r\n\r\n    const params = {\r\n        method,\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify( data )\r\n    }\r\n\r\n    try {\r\n        const respuesta = await fetch( urlReq, params)\r\n        return await respuesta.json()\r\n\r\n    } catch (error) {\r\n        console.log('error en authFetch: ', error);\r\n        return null\r\n    }\r\n}\r\n\r\n\r\n//Autenticación con token: Comprueba que el usuario esté logueado y el token vigente:\r\nexport const authFetchToken = async ( url, data, method ) => {\r\n    const urlReq = `${baseUrl}/${url}`\r\n    const token = localStorage.getItem('token') || ''\r\n    let params\r\n\r\n    if (method === 'GET') {\r\n        params = {\r\n            method,\r\n            headers: {\r\n                'x-token': token\r\n            }\r\n        }\r\n    } else {\r\n        params = {\r\n            method,\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'x-token': token\r\n            },\r\n            body: JSON.stringify( data )\r\n        }\r\n    }\r\n\r\n\r\n    try {\r\n        const respuesta = await fetch( urlReq, params)\r\n        return await respuesta.json()\r\n\r\n    } catch (error) {\r\n        console.log('error en authFetchToken: ', error);\r\n        return null\r\n    }\r\n}","import Swal from 'sweetalert2'\r\n\r\nexport const loadingMessage = (state) => {\r\n\r\n    if (state) {\r\n        Swal.fire({\r\n            html: 'Cargando',\r\n            didOpen: () => {\r\n                Swal.showLoading()\r\n            }\r\n        })\r\n    } else {\r\n        Swal.close()\r\n    }\r\n}\r\n\r\nexport const showMessage =(icon,title, text) => {\r\n    Swal.fire({\r\n        icon,\r\n        title,\r\n        text\r\n    })\r\n}","import { authFetch, authFetchToken } from \"../../helpers/fetch\";\r\nimport { showMessage } from \"../../helpers/messages\";\r\n\r\n\r\n//1- initialState:\r\nconst initialState = {\r\n    checking: true,\r\n}\r\n\r\n//2 - Types:\r\nconst types = {\r\n    checkingFinish: '[authDucks] Checking Finish',\r\n    startLogin: '[authDucks] Start Login',\r\n    login: '[authDucks] Login', //ya\r\n    startRegister: '[authDucks] Start Register',\r\n    startTokenRenew: '[authDucks] Start Token renew',\r\n    logout: '[authDucks] Logout'\r\n}\r\n\r\n\r\n//3 - Reducer:\r\nexport const authReducer = (state = initialState, action ) => {\r\n    switch (action.type) {\r\n        case types.login:\r\n            return { \r\n                ...state, \r\n                ...action.payload,\r\n                checking: false\r\n            }\r\n        case types.checkingFinish:\r\n            return {\r\n                ...state,\r\n                checking: false\r\n            }\r\n        case types.logout:\r\n            return {\r\n                checking: false\r\n            }\r\n    \r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n//4 - Actions:\r\n\r\n//Primera forma de hacer:\r\n// export const loginAction = ( correo, contrasena ) => {\r\n//     return async ( dispatch ) => {\r\n//         console.log('haber', correo, contrasena);\r\n//     }\r\n// }\r\n\r\n//Segunda forma de hacerlo:\r\nexport const loginAction = ( correo, contrasena ) => async ( dispath, getState ) => {\r\n    const data = { correo, contrasena }\r\n    const { uid, nombre, token, ok, msg } = await authFetch('auth', data, 'POST')\r\n    \r\n    if ( ok ) {\r\n        localStorage.setItem('token',token)\r\n        localStorage.setItem('token-init-date', new Date().getTime())\r\n\r\n        dispath({\r\n            type: types.login,\r\n            payload: {\r\n                uid,\r\n                nombre\r\n            }\r\n        })\r\n\r\n    } else {\r\n        showMessage('error', null, msg )\r\n    }\r\n\r\n}\r\n\r\nexport const registerAction = ( correo, name, contrasena ) => async ( dispath, getState) => {\r\n    const data = { correo, nombre: name, contrasena }\r\n    const { uid, nombre, token, ok, msg } = await authFetch('auth/create', data, 'POST')\r\n    \r\n\r\n    if ( ok ) {\r\n        localStorage.setItem('token',token)\r\n        localStorage.setItem('token-init-date', new Date().getTime())\r\n\r\n        dispath({\r\n            type: types.login,\r\n            payload: {\r\n                uid,\r\n                nombre\r\n            }\r\n        })\r\n\r\n        showMessage('success', 'Bienvenido','Registro exitoso')\r\n\r\n    } else {\r\n        showMessage('error', null, msg )\r\n    }\r\n}\r\n\r\nexport const authCheckAction = () => async ( dispath, getState) => {\r\n\r\n    const res = await authFetchToken('auth/updateToken', null , 'GET')\r\n    \r\n    if ( res.ok ) {\r\n        localStorage.setItem('token',res.token)\r\n        localStorage.setItem('token-init-date', new Date().getTime())\r\n\r\n        dispath({\r\n            type: types.login,\r\n            payload: {\r\n                uid: res.uid,\r\n                nombre: res.nombre\r\n            }\r\n        })\r\n\r\n    } else {\r\n        dispath({\r\n            type: types.checkingFinish\r\n        })\r\n    }\r\n}\r\n\r\nexport const logoutAction = () =>  (dispath, getState) => {\r\n    dispath({\r\n        type: types.logout\r\n    })\r\n    \r\n    localStorage.clear()\r\n}","import moment from \"moment\"\r\n\r\n//Pone los titulos del calendario en español\r\nexport const calendarConfig = {\r\n    allDay: 'Todo el día',\r\n    previous: 'Atrás',\r\n    next: 'Siguiente',\r\n    today: 'Hoy',\r\n    month: 'Mes',\r\n    week: 'Semana',\r\n    day: 'Día',\r\n    agenda: 'Agenda',\r\n    date: 'Fecha',\r\n    time: 'Hora',\r\n    event: 'Evento',\r\n    noEventsInRange: 'No hay eventos en este rango',\r\n    showMore: total => `+ Ver más (${total})`\r\n};\r\n\r\n//Video 379: Convierte la fecha String del Backend en una válida para el Calendario\r\nexport const adjustEventsDate = ( eventos = [] ) => { \r\n   return eventos.map( evento => ({\r\n            ...evento, \r\n            start: moment(evento.start).toDate(),\r\n            end: moment(evento.end).toDate()\r\n        })\r\n    )\r\n}\r\n","import { adjustEventsDate } from \"../../helpers/calendar-config\"\r\nimport { authFetchToken } from \"../../helpers/fetch\"\r\nimport { showMessage } from \"../../helpers/messages\"\r\n\r\n\r\n\r\n\r\n// Lo use para antes de conectar con la base de datos:\r\n// const initialState = {\r\n//     events: [\r\n//         {\r\n//             id: 'sdsd&hnsd56gGRf123bSD',\r\n//             title: 'PruebaReducer',\r\n//             start: moment().toDate(),     //Sinónimo de new Date() de JavaScript\r\n//             end: moment().add(1, 'hours').toDate(),\r\n//             allDay: false,\r\n//             notes: 'acá van las notas',\r\n//             user: {\r\n//                 _id: '12dsfv324D',\r\n//                 nombre: 'Martin User'\r\n//             }\r\n//         }\r\n//     ],\r\n//     activeEvent: null\r\n// }\r\n\r\n//1- initialState:\r\nconst initialState = {\r\n    events: [],\r\n    activeEvent: null\r\n}\r\n\r\n//2 - Types:\r\nconst types = {\r\n    eventNew: '[CalendarDucks] Add Event',\r\n    eventList: '[CalendarDucks] List Event',\r\n    eventActive: '[CalendarDucks] Active Event',\r\n    eventClearActive: '[CalendarDucks] Clear Active Event',\r\n    eventUpdate: '[CalendarDucks] Updated Event',\r\n    eventDelete: '[CalendarDucks] Delete Event',\r\n    clearCalendar: '[CalendarDucks] Clear All Calendar'\r\n}\r\n\r\n//3 - Reducer:\r\nexport const calendarReducer = (state = initialState, action ) => {\r\n    switch (action.type) {\r\n        case types.eventActive:\r\n            return { \r\n                ...state, \r\n                activeEvent: action.payload \r\n            }\r\n        case types.eventClearActive:\r\n            return { \r\n                ...state, \r\n                activeEvent: null \r\n            }\r\n        case types.eventNew:\r\n            return { \r\n                ...state, \r\n                events: [...state.events, action.payload]\r\n            }\r\n        case types.eventList:\r\n            return {\r\n                ...state, \r\n                events: [ ...action.payload ] \r\n            }\r\n        case types.eventUpdate:\r\n            return {\r\n                ...state, \r\n                events: state.events.map( event => event.id === action.payload.id ? action.payload : event )\r\n            }\r\n        case types.eventDelete:\r\n            return {\r\n                ...state, \r\n                events: state.events.filter( event => event.id !== state.activeEvent.id ),\r\n                activeEvent: null\r\n            }\r\n        case types.clearCalendar:\r\n            return {\r\n                ...initialState\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n//4 - Actions:\r\nexport const eventNewAction = ( event ) => async ( dispatch, getState ) => {\r\n    \r\n    const { uid, nombre } = getState().auth\r\n\r\n    try {   \r\n        const res = await authFetchToken('events/create', event, 'POST')\r\n\r\n        const evento = {\r\n            id: res.evento.id,\r\n            ...event,\r\n            usuario: {\r\n                _id: uid,\r\n                nombre\r\n            }\r\n        }\r\n    \r\n        if ( res.ok ) {\r\n            dispatch({\r\n                type: types.eventNew,\r\n                payload: evento\r\n            })\r\n        }\r\n\r\n    } catch (error) {\r\n        console.log('error en eventNewAction', error);\r\n        \r\n    }\r\n}\r\n\r\n\r\nexport const eventLoadAction = () => async ( dispatch, getState ) => {\r\n\r\n    try {\r\n        const { ok, eventos } = await authFetchToken('events/', null, 'GET')\r\n        \r\n        if (ok) {        \r\n            const events = adjustEventsDate( eventos )\r\n            dispatch({\r\n                type: types.eventList,\r\n                payload: events\r\n            })\r\n        }\r\n\r\n    } catch (error) {\r\n        console.log('error en eventLoadAction', error);\r\n        \r\n    }\r\n}\r\n\r\nexport const eventUpdateAction = ( event ) => async (dispatch, getState ) => {\r\n\r\n    try {\r\n        const { ok, msg } = await authFetchToken(`events/${event.id}`, event, 'PUT')\r\n\r\n        if ( ok ) {\r\n            dispatch({\r\n                type: types.eventUpdate,\r\n                payload: event\r\n            })\r\n        } else {\r\n            //Solo se pueden editar los eventos propios del user\r\n            showMessage('error', null, msg)\r\n        }\r\n\r\n    } catch (error) {\r\n        console.log('eventUpdateAction', error);\r\n        \r\n    }\r\n}\r\n\r\nexport const eventDeleteAction = () => async (dispatch, getState ) => {\r\n\r\n    try {\r\n        const { id } = getState().calendar.activeEvent\r\n        const { ok, msg } = await authFetchToken(`events/${id}`, {}, 'DELETE')\r\n\r\n        if ( ok ) {\r\n            dispatch({\r\n                type: types.eventDelete\r\n            })\r\n        } else {\r\n            showMessage('error', null, msg)\r\n        }\r\n\r\n    } catch (error) {\r\n        console.log('error eventDeleteAction', error);   \r\n    }\r\n    \r\n}\r\n\r\nexport const clearCalendarAction = () => (dispatch, getState ) => {\r\n    dispatch({\r\n        type: types.clearCalendar\r\n    })\r\n}\r\n\r\nexport const eventActiveAction = ( event ) => ({\r\n    type: types.eventActive,\r\n    payload: event\r\n})\r\n\r\nexport const eventClearActiveAction = () => ({\r\n    type: types.eventClearActive\r\n})\r\n","\r\n\r\n//1- initialState:\r\nconst initialState = {\r\n    modalOpen: false\r\n}\r\n\r\n//2 - Types:\r\nconst types = {\r\n    uiOpenModal: '[uiDucks] Open Modal',\r\n    uiCloseModal: '[uiDucks] Close Modal'\r\n}\r\n\r\n\r\n//3 - Reducer:\r\nexport const uiReducer = (state = initialState, action ) => {\r\n    switch (action.type) {\r\n        case types.uiOpenModal:\r\n            return { ...state, modalOpen: true }\r\n        case types.uiCloseModal:\r\n                return { ...state, modalOpen: false }\r\n    \r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n//4 - Actions:\r\nexport const openModalAction = () => ({\r\n    type: types.uiOpenModal\r\n})\r\n\r\nexport const closeModalAction = () => ({\r\n    type: types.uiCloseModal\r\n})","import {createStore, combineReducers, compose, applyMiddleware} from 'redux'\r\nimport thunk from 'redux-thunk'\r\nimport { authReducer } from './ducks/authDucks';\r\nimport { calendarReducer } from './ducks/calendarDucks';\r\nimport { uiReducer } from './ducks/uiDucks';\r\n\r\n\r\nconst rootReducer = combineReducers({\r\n    ui: uiReducer,\r\n    calendar: calendarReducer,\r\n    auth: authReducer\r\n    //TODO: CalendarReducer\r\n})\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;           //Esto siempre es igual y es para utilizar la extensiòn de Google Chrome de Redux\r\n\r\nexport const store = createStore(\r\n    rootReducer,\r\n    composeEnhancers( applyMiddleware( thunk ) )\r\n)\r\n","import React from 'react'\r\n\r\nexport const Loader = () => {\r\n\r\n    return (\r\n        <div className=\"d-flex justify-content-center align-items-center\" style={{ height: '100vh' }}>\r\n            <div className=\"spinner-grow text-primary ml-3\" role=\"status\">\r\n                <span className=\"sr-only\">Loading...</span>\r\n            </div>\r\n            <div className=\"spinner-grow text-secondary ml-3\" role=\"status\">\r\n                <span className=\"sr-only\">Loading...</span>\r\n            </div>\r\n            <div className=\"spinner-grow text-success ml-3\" role=\"status\">\r\n                <span className=\"sr-only\">Loading...</span>\r\n            </div>\r\n            <div className=\"spinner-grow text-danger ml-3\" role=\"status\">\r\n                <span className=\"sr-only\">Loading...</span>\r\n            </div>\r\n            <div className=\"spinner-grow text-warning ml-3\" role=\"status\">\r\n                <span className=\"sr-only\">Loading...</span>\r\n            </div>\r\n            <div className=\"spinner-grow text-info ml-3\" role=\"status\">\r\n                <span className=\"sr-only\">Loading...</span>\r\n            </div>\r\n            <div className=\"spinner-grow text-light ml-3\" role=\"status\">\r\n                <span className=\"sr-only\">Loading...</span>\r\n            </div>\r\n            <div className=\"spinner-grow text-dark ml-3\" role=\"status\">\r\n                <span className=\"sr-only\">Loading...</span>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import { useDispatch, useSelector } from \"react-redux\";\r\nimport { useNavigate } from 'react-router-dom'\r\nimport { logoutAction } from \"../../redux/ducks/authDucks\";\r\nimport { clearCalendarAction } from \"../../redux/ducks/calendarDucks\";\r\n\r\n\r\nexport const Navbar = () => {\r\n\r\n    const { nombre } = useSelector(state => state.auth)\r\n    const dispatch = useDispatch()\r\n    const navigate = useNavigate()\r\n\r\n    const handleLogout = () => {\r\n        navigate('/login', {\r\n            replace: true\r\n        })\r\n\r\n        dispatch(logoutAction())\r\n        dispatch(clearCalendarAction())\r\n    }\r\n\r\n    return (\r\n        <div className=\"navbar navbar-dark bg-dark mb-4 px-3\">\r\n            <span className=\"navbar-brand\">{nombre}</span>\r\n\r\n            <button className=\"btn btn-outline-danger\" onClick={handleLogout}>\r\n                <span>Salir </span>\r\n                <i className=\"fas fa-sign-out-alt\"></i>\r\n            </button>\r\n        </div>\r\n    )\r\n}\r\n","\r\nexport default function CalendarEvent({ event }) {\r\n\r\n    const { title, usuario } = event\r\n\r\n    return (\r\n        <div>\r\n            <strong>{title}</strong> - <span>{usuario.nombre}</span>\r\n        </div>\r\n    )\r\n}\r\n","import Modal from 'react-modal';\r\nimport DateTimePicker from 'react-datetime-picker';\r\nimport moment from 'moment';\r\nimport { useEffect, useState } from 'react';\r\nimport { showMessage } from '../../helpers/messages';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { closeModalAction } from '../../redux/ducks/uiDucks';\r\nimport { eventClearActiveAction, eventNewAction, eventUpdateAction } from '../../redux/ducks/calendarDucks';\r\n\r\nconst customStyles = {\r\n    content: {\r\n        top: '50%',\r\n        left: '50%',\r\n        right: 'auto',\r\n        bottom: 'auto',\r\n        marginRight: '-50%',\r\n        transform: 'translate(-50%, -50%)',\r\n    },\r\n};\r\n\r\n\r\nModal.setAppElement('#root');\r\n\r\nconst startEvent = moment().minutes(0).seconds(0).add(1, 'hours')\r\nconst endEvent = startEvent.clone().add(1, 'hours')\r\n\r\nconst initEvent = {\r\n    title: '',\r\n    notes: '',\r\n    start: startEvent.toDate(),\r\n    end: endEvent.toDate()\r\n}\r\n\r\n\r\n//------------------     COMPONENTE:\r\nexport const CalendarModal = () => {\r\n\r\n    const [dateStart, setDateStart] = useState(startEvent.toDate())\r\n    const [dateEnd, setDateEnd] = useState(endEvent.toDate())\r\n    const [titleValid, setTitleValid] = useState(true)\r\n\r\n    const { modalOpen } = useSelector(state => state.ui)\r\n    const { activeEvent } = useSelector(state => state.calendar)\r\n\r\n    const [formValues, setFormValues] = useState(initEvent)\r\n    const { title, notes, start, end } = formValues\r\n    const dispatch = useDispatch()\r\n\r\n    useEffect(() => {\r\n\r\n        if (activeEvent) {\r\n            setFormValues(activeEvent)\r\n\r\n            const starReset = moment(activeEvent.start).seconds(0).toDate()\r\n            const endReset = moment(activeEvent.end).seconds(0).toDate()\r\n\r\n            setDateStart(starReset)\r\n            setDateEnd(endReset)\r\n        } else {\r\n            setFormValues(initEvent)\r\n        }\r\n    }, [activeEvent])\r\n\r\n    const closeModal = () => {\r\n        console.log('closeModal: ');\r\n        dispatch(closeModalAction())\r\n        dispatch(eventClearActiveAction())\r\n\r\n        //Limpia el form:\r\n        setFormValues(initEvent)\r\n        setDateStart(startEvent.toDate())\r\n        setDateEnd(endEvent.toDate())\r\n    }\r\n\r\n    const handleStartDateChange = (e) => {\r\n        setDateStart(e)\r\n\r\n        const endDate = moment(e).add(1, 'hours')\r\n        setDateEnd(endDate.toDate())\r\n\r\n        setFormValues({\r\n            ...formValues,\r\n            start: e,\r\n            end: endDate.toDate()\r\n        })\r\n\r\n    }\r\n\r\n    const handleEndDateChange = (e) => {\r\n        setDateEnd(e)\r\n\r\n        setFormValues({\r\n            ...formValues,\r\n            end: e\r\n        })\r\n    }\r\n\r\n    const handleInputChange = ({ target }) => {\r\n        setFormValues({\r\n            ...formValues,\r\n            [target.name]: target.value\r\n        })\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault()\r\n\r\n        const momentStart = moment(start)\r\n        const momentEnd = moment(end)\r\n\r\n        if (momentStart.isSameOrAfter(momentEnd)) {\r\n            return showMessage('error', null, 'Fecha fin debe ser mayor a fecha inicio')\r\n        }\r\n\r\n        if (!title.trim()) {\r\n            return setTitleValid(false)\r\n        }\r\n\r\n\r\n        if (activeEvent) {\r\n            //Edita un evento:\r\n            dispatch(eventUpdateAction(formValues))\r\n        } else {\r\n            //TODO: Crea un evento:\r\n            //Sirvió antes de conectar con la base de datos crear un evento ficticio\r\n            // dispatch(eventNewAction({\r\n            //     ...formValues,\r\n            //     id: `${new Date().getTime}&mkhs&b2jkhFRr2f`,\r\n            //     user: {\r\n            //         _id: '123',\r\n            //         name: 'Martin'\r\n            //     }\r\n            // }))\r\n\r\n            dispatch(eventNewAction(formValues))\r\n        }\r\n\r\n\r\n        setTitleValid(true)\r\n        closeModal()\r\n\r\n    }\r\n\r\n    return (\r\n        <Modal\r\n            isOpen={modalOpen}\r\n            // onAfterOpen={afterOpenModal}\r\n            onRequestClose={closeModal}\r\n            style={customStyles}\r\n            closeTimeoutMS={200}\r\n            className=\"modal\"\r\n            overlayClassName=\"modal-fondo\"\r\n        >\r\n            <h1> {activeEvent ? 'Editar Evento' : 'Nuevo Evento'} </h1>\r\n            <hr />\r\n\r\n            <form className=\"container\" onSubmit={handleSubmit}>\r\n\r\n                <div className=\"form-group\">\r\n                    <label>Fecha y hora inicio</label>\r\n                    <DateTimePicker\r\n                        className=\"form-control\"\r\n                        format=\"y-MM-dd h:mm:ss a\"\r\n                        amPmAriaLabel=\"Select AM/PM\"\r\n                        onChange={handleStartDateChange}\r\n                        value={dateStart}\r\n                    />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                    <label>Fecha y hora fin</label>\r\n                    <DateTimePicker\r\n                        className=\"form-control\"\r\n                        format=\"y-MM-dd h:mm:ss a\"\r\n                        amPmAriaLabel=\"Select AM/PM\"\r\n                        minDate={dateStart}\r\n                        onChange={handleEndDateChange}\r\n                        value={dateEnd}\r\n                    />\r\n                </div>\r\n\r\n                <hr />\r\n                <div className=\"form-group\">\r\n                    <label>Titulo</label>\r\n                    <input\r\n                        type=\"text\"\r\n                        className={`form-control ${!titleValid && 'is-invalid'}`}\r\n                        placeholder=\"Nombre del evento\"\r\n                        name=\"title\"\r\n                        autoComplete=\"off\"\r\n                        value={title}\r\n                        onChange={handleInputChange}\r\n                    />\r\n                    <small id=\"emailHelp\" className=\"form-text text-muted\">Una descripción corta</small>\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                    <label>Descripción (Opcional)</label>\r\n                    <textarea\r\n                        type=\"text\"\r\n                        className=\"form-control\"\r\n                        placeholder=\"Notas\"\r\n                        rows=\"5\"\r\n                        name=\"notes\"\r\n                        value={notes}\r\n                        onChange={handleInputChange}\r\n                    ></textarea>\r\n\r\n                    <small id=\"emailHelp\" className=\"form-text text-muted\">Información adicional</small>\r\n                </div>\r\n\r\n                <button\r\n                    type=\"submit\"\r\n                    className=\"btn btn-outline-primary btn-block\"\r\n                >\r\n                    <i className=\"far fa-save\"></i>\r\n                    <span> Guardar</span>\r\n                </button>\r\n\r\n            </form>\r\n        </Modal>\r\n\r\n    )\r\n}\r\n","import { useSelector } from \"react-redux\"\r\nimport { useDispatch } from \"react-redux\"\r\nimport { eventDeleteAction } from \"../../redux/ducks/calendarDucks\"\r\nimport { openModalAction } from \"../../redux/ducks/uiDucks\"\r\n\r\n\r\nexport const FloatButton = () => {\r\n\r\n    const { activeEvent } = useSelector(state => state.calendar)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const createEvent = () => {\r\n        dispatch(openModalAction())\r\n    }\r\n\r\n    const deleteEvent = () => {\r\n        dispatch(eventDeleteAction())\r\n    }\r\n\r\n    if (activeEvent === null) {\r\n        //Crear evento\r\n        return (\r\n            <button className=\"btn btn-primary fab\" onClick={createEvent}>\r\n                <i className=\"fas fa-plus\"></i>\r\n            </button>\r\n        )\r\n    } else {\r\n        //Eliminar evento\r\n        return (\r\n            <button className=\"btn btn-danger fab\" onClick={deleteEvent}>\r\n                <i className=\"fas fa-trash\"></i>\r\n            </button>\r\n        )\r\n    }\r\n}\r\n","import 'react-big-calendar/lib/css/react-big-calendar.css'\r\nimport { Calendar, momentLocalizer } from 'react-big-calendar'\r\nimport moment from 'moment'\r\nimport 'moment/locale/es'\r\n//-----------------------------\r\nimport { Navbar } from '../ui/Navbar'\r\nimport { calendarConfig } from '../../helpers/calendar-config'\r\nimport CalendarEvent from './CalendarEvent'\r\nimport { useState } from 'react'\r\nimport { CalendarModal } from './CalendarModal'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { openModalAction } from '../../redux/ducks/uiDucks'\r\nimport { eventActiveAction, eventClearActiveAction, eventLoadAction } from '../../redux/ducks/calendarDucks'\r\nimport { FloatButton } from '../ui/FloatButton'\r\nimport { useEffect } from 'react'\r\n\r\n\r\n//--------------------------------------\r\nmoment.locale('es')\r\nconst localizer = momentLocalizer(moment) // or globalizeLocalizer\r\n\r\n\r\n//--------------------------------------\r\nexport const CalendarScreen = () => {\r\n\r\n    const [view, setView] = useState(localStorage.getItem('lastView') || 'month')\r\n    const dispatch = useDispatch()\r\n    const { events } = useSelector(state => state.calendar)\r\n    const { uid } = useSelector(state => state.auth)\r\n\r\n    useEffect(() => {\r\n        dispatch(eventLoadAction())\r\n    }, [dispatch])\r\n\r\n    //Explicación video 305 min 4:12\r\n    const eventStyle = (event, start, end, isSelected) => {\r\n\r\n        const style = {\r\n            backgroundColor: (uid === event.usuario._id) ? '#F70776' : '#FDB44B',\r\n            borderRadius: '0px',\r\n            opacity: 0.8,\r\n            display: 'block',\r\n            color: 'white',\r\n        }\r\n\r\n        return {\r\n            style\r\n        }\r\n    }\r\n\r\n    const doubleClick = (e) => {\r\n        console.log('doubleClick: ');\r\n        dispatch(openModalAction())\r\n    }\r\n\r\n    const onSelectEvent = (e) => {\r\n        console.log('evento Seleccionado: ');\r\n        dispatch(eventActiveAction(e))\r\n    }\r\n\r\n    const onViewChange = (view) => {\r\n        console.log('onViewChange: ', view);\r\n        setView(view)\r\n        localStorage.setItem('lastView', view)\r\n    }\r\n\r\n    const onSelectSlot = (e) => {\r\n        console.log('onSelectSlot: ');\r\n        dispatch(eventClearActiveAction())\r\n    }\r\n\r\n    return (\r\n        <div className=\"calendar-screen\">\r\n            <Navbar />\r\n\r\n            <Calendar\r\n                localizer={localizer}\r\n                events={events}\r\n                startAccessor=\"start\"\r\n                endAccessor=\"end\"\r\n                messages={calendarConfig}\r\n                eventPropGetter={eventStyle}\r\n                onDoubleClickEvent={doubleClick}\r\n                onSelectEvent={onSelectEvent}\r\n                onView={onViewChange}\r\n                onSelectSlot={onSelectSlot}\r\n                selectable={true}\r\n                view={view}\r\n                components={{\r\n                    event: CalendarEvent\r\n                }}\r\n            />\r\n\r\n            <FloatButton />\r\n\r\n            <CalendarModal />\r\n        </div>\r\n    )\r\n}\r\n","import { Routes, Route, Navigate } from \"react-router-dom\";\nimport { CalendarScreen } from \"../components/calendar/CalendarScreen\";\n\n\nexport const PrivateRoute = () => {\n    console.log('PrivateRoute');\n\n    return (\n        <Routes>\n            <Route path=\"/calendar\" element={<CalendarScreen />} />\n            <Route path=\"/*\" element={<Navigate to=\"/calendar\" />} />\n        </Routes>\n    )\n}\n","import { useNavigate } from \"react-router-dom\"\r\n\r\nexport const NotFoundScreen = () => {\r\n\r\n    const navigate = useNavigate()\r\n\r\n    const handleLogin = () => {\r\n        navigate('/login', { replace: true })\r\n    }\r\n\r\n    return (\r\n        <div className=\"d-flex justify-content-center align-items-center\" style={{ height: '100vh' }}>\r\n            <div>\r\n                <h1 className=\"text-center text-danger\">404</h1>\r\n                <h2 className=\"mb-4\">Ops! Page Not Found</h2>\r\n                <button className=\"btn btn-primary btn-block\" onClick={handleLogin}>Ingresar</button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import { useForm } from '../../hooks/useForm';\r\nimport { useDispatch } from 'react-redux'\r\nimport './login.css';\r\nimport { loginAction, registerAction } from '../../redux/ducks/authDucks';\r\nimport { showMessage } from '../../helpers/messages';\r\n\r\nexport const LoginScreen = () => {\r\n\r\n    //useForm:\r\n    const initialForm = {\r\n        loginCorreo: 'martinrole@hotmail.com',\r\n        loginContrasena: 'mar123',\r\n        rNombre: 'Tobby',\r\n        rCorreo: 'tobbias23@hotmail.com',\r\n        rContrasena: 'soyTobby1a',\r\n        rContrasena2: 'soyTobby1a',\r\n    };\r\n    const [formValues, handleInputChange] = useForm(initialForm);\r\n    const { loginCorreo, loginContrasena, rNombre, rCorreo, rContrasena, rContrasena2 } = formValues\r\n\r\n    //dispatch:\r\n    const dispatch = useDispatch()\r\n\r\n    const handleLogin = (e) => {\r\n        e.preventDefault()\r\n\r\n        dispatch(loginAction(loginCorreo, loginContrasena))\r\n    }\r\n\r\n    const handleRegister = (e) => {\r\n        e.preventDefault()\r\n\r\n        if (rContrasena !== rContrasena2) {\r\n            return showMessage('error', null, 'Contraseñas no son iguales')\r\n        }\r\n\r\n        dispatch(registerAction(rCorreo, rNombre, rContrasena))\r\n    }\r\n\r\n    return (\r\n        <div className=\"container login-container\">\r\n            <div className=\"row\">\r\n                <div className=\"col-md-6 login-form-1\">\r\n                    <h3>Ingreso</h3>\r\n                    <form onSubmit={handleLogin}>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"text\"\r\n                                name=\"loginCorreo\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Correo\"\r\n                                value={loginCorreo}\r\n                                onChange={handleInputChange}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"password\"\r\n                                name=\"loginContrasena\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Contraseña\"\r\n                                value={loginContrasena}\r\n                                onChange={handleInputChange}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"submit\"\r\n                                className=\"btnSubmit\"\r\n                                value=\"Ingresar\"\r\n                            />\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n\r\n                <div className=\"col-md-6 login-form-2\">\r\n                    <h3>Registro</h3>\r\n                    <form onSubmit={handleRegister}>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"text\"\r\n                                name=\"rNombre\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Nombre\"\r\n                                value={rNombre}\r\n                                onChange={handleInputChange}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"email\"\r\n                                name=\"rCorreo\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Correo\"\r\n                                value={rCorreo}\r\n                                onChange={handleInputChange}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"password\"\r\n                                name=\"rContrasena\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Contraseña\"\r\n                                value={rContrasena}\r\n                                onChange={handleInputChange}\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"password\"\r\n                                name=\"rContrasena2\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Repita la contraseña\"\r\n                                value={rContrasena2}\r\n                                onChange={handleInputChange}\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"submit\"\r\n                                className=\"btnSubmit\"\r\n                                value=\"Crear cuenta\" />\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import { useState } from 'react';\r\n\r\n\r\nexport const useForm = ( initialState = {} ) => {\r\n    \r\n    const [values, setValues] = useState(initialState);\r\n\r\n    const reset = () => {\r\n        setValues( initialState );\r\n    }\r\n\r\n\r\n    const handleInputChange = ({ target }) => {\r\n\r\n        setValues({\r\n            ...values,\r\n            [ target.name ]: target.value\r\n        });\r\n\r\n    }\r\n\r\n    return [ values, handleInputChange, reset ];\r\n\r\n}","import { Routes, Route } from \"react-router-dom\";\nimport { NotFoundScreen } from '../components/NotFound/NotFoundScreen'\nimport { LoginScreen } from '../components/auth/LoginScreen'\n\nexport const PublicRoute = () => {\n    console.log('PublicRoute');\n\n    return (\n        <Routes>\n            <Route path=\"/login\" element={<LoginScreen />} />\n            <Route path=\"/*\" element={<NotFoundScreen />} />\n        </Routes>\n\n    )\n}","import React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { BrowserRouter, Routes, Route } from \"react-router-dom\";\r\nimport { Loader } from \"../components/ui/Loader\";\r\nimport { authCheckAction } from \"../redux/ducks/authDucks\";\r\nimport { PrivateRoute } from \"./PrivateRoute\";\r\nimport { PublicRoute } from \"./PublicRoute\";\r\n\r\nexport const AppRouter = () => {\r\n\r\n    const { checking, uid } = useSelector(state => state.auth)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    useEffect(() => {\r\n        //Valida que el usuario esté autenticado\r\n        dispatch(authCheckAction())\r\n    }, [dispatch])\r\n\r\n    if (checking) {\r\n        return <Loader />\r\n    }\r\n\r\n    return (\r\n        <BrowserRouter>\r\n            <Routes>\r\n                {uid && <Route path=\"/*\" element={<PrivateRoute />} />}\r\n                {!uid && <Route path=\"/*\" element={<PublicRoute />} />}\r\n            </Routes>\r\n        </BrowserRouter>\r\n    )\r\n}\r\n\r\n\r\n//Información importante sobre react-router-dom V6 \r\n//https://reactrouter.com/docs/en/v6/upgrading/v5\r\n\r\n//Ajustar Redirect:\r\n//https://gist.github.com/mjackson/b5748add2795ce7448a366ae8f8ae3bb\r\n//https://stackoverflow.com/questions/67050966/how-to-build-a-404-page-with-react-router-dom-v6\r\n\r\n","import { Provider } from \"react-redux\"\r\nimport { store } from \"./redux/store\"\r\nimport { AppRouter } from \"./routers/AppRouter\"\r\n\r\nexport const CalendarApp = () => {\r\n    return (\r\n        <Provider store={store}>\r\n            <AppRouter />\r\n        </Provider>\r\n    )\r\n}\r\n","import ReactDOM from 'react-dom';\nimport { CalendarApp } from './CalendarApp';\nimport './sass/global.scss'\n\n//console.log(process.env)\n\nReactDOM.render(\n  <CalendarApp />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}